//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ComplianceAuditWeb.UserService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserService.IUserService")]
    public interface IUserService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/insertUser", ReplyAction="http://tempuri.org/IUserService/insertUserResponse")]
        string insertUser(Compliance.DataObject.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/insertUser", ReplyAction="http://tempuri.org/IUserService/insertUserResponse")]
        System.Threading.Tasks.Task<string> insertUserAsync(Compliance.DataObject.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/updateUser", ReplyAction="http://tempuri.org/IUserService/updateUserResponse")]
        string updateUser(Compliance.DataObject.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/updateUser", ReplyAction="http://tempuri.org/IUserService/updateUserResponse")]
        System.Threading.Tasks.Task<string> updateUserAsync(Compliance.DataObject.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserGroup", ReplyAction="http://tempuri.org/IUserService/GetUserGroupResponse")]
        string GetUserGroup();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserGroup", ReplyAction="http://tempuri.org/IUserService/GetUserGroupResponse")]
        System.Threading.Tasks.Task<string> GetUserGroupAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetRoles", ReplyAction="http://tempuri.org/IUserService/GetRolesResponse")]
        string GetRoles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetRoles", ReplyAction="http://tempuri.org/IUserService/GetRolesResponse")]
        System.Threading.Tasks.Task<string> GetRolesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/insertRoles", ReplyAction="http://tempuri.org/IUserService/insertRolesResponse")]
        string insertRoles(Compliance.DataObject.Roles Role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/insertRoles", ReplyAction="http://tempuri.org/IUserService/insertRolesResponse")]
        System.Threading.Tasks.Task<string> insertRolesAsync(Compliance.DataObject.Roles Role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/updateRoles", ReplyAction="http://tempuri.org/IUserService/updateRolesResponse")]
        string updateRoles(Compliance.DataObject.Roles Role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/updateRoles", ReplyAction="http://tempuri.org/IUserService/updateRolesResponse")]
        System.Threading.Tasks.Task<string> updateRolesAsync(Compliance.DataObject.Roles Role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetPrivilege", ReplyAction="http://tempuri.org/IUserService/GetPrivilegeResponse")]
        string GetPrivilege();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetPrivilege", ReplyAction="http://tempuri.org/IUserService/GetPrivilegeResponse")]
        System.Threading.Tasks.Task<string> GetPrivilegeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/insertGroups", ReplyAction="http://tempuri.org/IUserService/insertGroupsResponse")]
        string insertGroups();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/insertGroups", ReplyAction="http://tempuri.org/IUserService/insertGroupsResponse")]
        System.Threading.Tasks.Task<string> insertGroupsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/updateGroups", ReplyAction="http://tempuri.org/IUserService/updateGroupsResponse")]
        string updateGroups();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/updateGroups", ReplyAction="http://tempuri.org/IUserService/updateGroupsResponse")]
        System.Threading.Tasks.Task<string> updateGroupsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserServiceChannel : ComplianceAuditWeb.UserService.IUserService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserServiceClient : System.ServiceModel.ClientBase<ComplianceAuditWeb.UserService.IUserService>, ComplianceAuditWeb.UserService.IUserService {
        
        public UserServiceClient() {
        }
        
        public UserServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string insertUser(Compliance.DataObject.User user) {
            return base.Channel.insertUser(user);
        }
        
        public System.Threading.Tasks.Task<string> insertUserAsync(Compliance.DataObject.User user) {
            return base.Channel.insertUserAsync(user);
        }
        
        public string updateUser(Compliance.DataObject.User user) {
            return base.Channel.updateUser(user);
        }
        
        public System.Threading.Tasks.Task<string> updateUserAsync(Compliance.DataObject.User user) {
            return base.Channel.updateUserAsync(user);
        }
        
        public string GetUserGroup() {
            return base.Channel.GetUserGroup();
        }
        
        public System.Threading.Tasks.Task<string> GetUserGroupAsync() {
            return base.Channel.GetUserGroupAsync();
        }
        
        public string GetRoles() {
            return base.Channel.GetRoles();
        }
        
        public System.Threading.Tasks.Task<string> GetRolesAsync() {
            return base.Channel.GetRolesAsync();
        }
        
        public string insertRoles(Compliance.DataObject.Roles Role) {
            return base.Channel.insertRoles(Role);
        }
        
        public System.Threading.Tasks.Task<string> insertRolesAsync(Compliance.DataObject.Roles Role) {
            return base.Channel.insertRolesAsync(Role);
        }
        
        public string updateRoles(Compliance.DataObject.Roles Role) {
            return base.Channel.updateRoles(Role);
        }
        
        public System.Threading.Tasks.Task<string> updateRolesAsync(Compliance.DataObject.Roles Role) {
            return base.Channel.updateRolesAsync(Role);
        }
        
        public string GetPrivilege() {
            return base.Channel.GetPrivilege();
        }
        
        public System.Threading.Tasks.Task<string> GetPrivilegeAsync() {
            return base.Channel.GetPrivilegeAsync();
        }
        
        public string insertGroups() {
            return base.Channel.insertGroups();
        }
        
        public System.Threading.Tasks.Task<string> insertGroupsAsync() {
            return base.Channel.insertGroupsAsync();
        }
        
        public string updateGroups() {
            return base.Channel.updateGroups();
        }
        
        public System.Threading.Tasks.Task<string> updateGroupsAsync() {
            return base.Channel.updateGroupsAsync();
        }
    }
}
