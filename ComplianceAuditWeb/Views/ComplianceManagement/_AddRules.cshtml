@model ComplianceAuditWeb.Models.ComplianceViewModel

@{ Layout = null;}

@using (Html.BeginForm())
{<div class="mid_content_sec">
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Compliance.Compliance_Parent_ID)
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="col-xs-4 subSelect ">
        <div class="input-field">
            @Html.Label("Compliance Title", new { @class = "floating-label" })

            @Html.TextBoxFor(model => model.Compliance.Compliance_Title, new { @class = "inputMaterial ui - autocomplete - input" })
            <span id="loading_data_icon"></span>
            @Html.ValidationMessageFor(model => model.Compliance.Compliance_Title, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-xs-4 subSelect ">
        <div class="input-field">
            @Html.Label("Compliance Description", new { @class = "floating-label" })

            @Html.TextAreaFor(model => model.Compliance.Comp_Description, new { @class = "inputMaterial ui - autocomplete - input" })
            <span id="loading_data_icon"></span>
            @Html.ValidationMessageFor(model => model.Compliance.Comp_Description, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-xs-4 subSelect ">
        <div class="input-field">
            @Html.Label("compliance def consequence", new { @class = "floating-label" })

            @Html.TextAreaFor(model => model.Compliance.compl_def_consequence, new { @class = "inputMaterial ui - autocomplete - input" })
            <span id="loading_data_icon"></span>
            @Html.ValidationMessageFor(model => model.Compliance.compl_def_consequence, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="clearfix"></div>
    <div class="col-xs-4 subSelect ">
        <div class="input-field">
            @Html.Label("Risk Category", new { @class = "floating-label" })

            @Html.DropDownListFor(model => model.Compliance.Risk_Category, new SelectList(Enum.GetNames(typeof(ComplianceAuditWeb.Models.ComplianceViewModel.RiskCategory))), "--Select RiskCategory", new { @class = "inputMaterial ui - autocomplete - input" })
            @Html.ValidationMessageFor(model => model.Compliance.Risk_Category, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-xs-4 subSelect ">
        <div class="input-field">
            @Html.Label("Risk Description", new { @class = "floating-label" })

            @Html.TextBoxFor(model => model.Compliance.Risk_Description, new { @class = "inputMaterial ui - autocomplete - input" })
            <span id="loading_data_icon"></span>
            @Html.ValidationMessageFor(model => model.Compliance.Risk_Description, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-xs-4 subSelect ">
        <div class="input-field">
            @Html.Label("Recurrence", new { @class = "floating-label" })

            @Html.TextBoxFor(model => model.Compliance.Recurrence, new { @class = "inputMaterial ui - autocomplete - input" })
            <span id="loading_data_icon"></span>
            @Html.ValidationMessageFor(model => model.Compliance.Recurrence, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="clearfix"></div>
    <div class="col-xs-4 subSelect ">
        <div class="input-field">
            @Html.Label("Form", new { @class = "floating-label" })

            @Html.TextBoxFor(model => model.Compliance.Form, new { @class = "inputMaterial ui - autocomplete - input" })
            <span id="loading_data_icon"></span>
            @Html.ValidationMessageFor(model => model.Compliance.Form, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-xs-4 subSelect ">
        <div class="input-field">
            @Html.Label("Type", new { @class = "floating-label" })

            @Html.TextBoxFor(model => model.Compliance.Type, new { @class = "inputMaterial ui - autocomplete - input" })
            <span id="loading_data_icon"></span>
            @Html.ValidationMessageFor(model => model.Compliance.Type, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-xs-4 subSelect ">
        <div class="input-field">
            @Html.Label("Is Best Practice", new { @class = "floating-label" })

            @Html.EditorFor(model => model.Compliance.Is_Best_Practice)
            <span id="loading_data_icon"></span>
            @Html.ValidationMessageFor(model => model.Compliance.Is_Best_Practice, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="clearfix"></div>
    <div class="col-xs-4 subSelect ">
        <div class="input-field">
            @Html.Label("Effective Start Date", new { @class = "floating-label" })

            @Html.EditorFor(model => model.Compliance.Effective_Start_Date, new { @class = "inputMaterial ui - autocomplete - input" })
            <span id="loading_data_icon"></span>
            @Html.ValidationMessageFor(model => model.Compliance.Effective_Start_Date, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-xs-4 subSelect ">
        <div class="input-field">
            @Html.Label("Effective_End_Date", new { @class = "floating-label" })

            @Html.EditorFor(model => model.Compliance.Effective_End_Date, new { @class = "inputMaterial ui - autocomplete - input" })
            <span id="loading_data_icon"></span>
            @Html.ValidationMessageFor(model => model.Compliance.Effective_End_Date, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-xs-4 subSelect ">
        <div class="input-field">
            @Html.Label("Country", new { @class = "floating-label" })

            @Html.DropDownListFor(model => model.Compliance.Country_ID, Model.Countrylist, new { @class = "inputMaterial ui - autocomplete - input" })
            @Html.ValidationMessageFor(model => model.Compliance.Country_ID, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="clearfix"></div>
    <div class="col-xs-4 subSelect ">
        <div class="input-field">
            @Html.Label("State", new { @class = "floating-label" })

            @Html.DropDownListFor(model => model.Compliance.State_ID, Model.Statelist, new { @class = "inputMaterial ui - autocomplete - input" })
            @Html.ValidationMessageFor(model => model.Compliance.State_ID, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-xs-4 subSelect ">
        <div class="input-field">
            @Html.Label("City", new { @class = "floating-label" })

            @Html.DropDownListFor(model => model.Compliance.City_ID, Model.Citylist, new { @class = "inputMaterial ui - autocomplete - input" })
            @Html.ValidationMessageFor(model => model.Compliance.City_ID, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="clearfix"></div>
    <ul class="list-inline continueBtn">
        <li>
            @*<input type="submit" value="Create" class="btn btn-default" />*@
            <button type="submit" class="btn primary-button" id="btnProceed" name="Button" value="Submit">Save<span class="ripple" style="width: 92.6094px; height: 92.6094px; top: 49.5px; left: -19.1875px;"></span></button>
        </li>
    </ul>
</div>
    }
