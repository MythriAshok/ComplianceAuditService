@model ComplianceAuditWeb.Models.UserViewModel

@*@{ Layout = null;}*@

@using (Html.BeginForm())
{

    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @Html.HiddenFor(model => model.User.UserId)

    @Html.Label("FirstName")
    @Html.TextBoxFor(m => m.User.FirstName)
    @Html.ValidationMessageFor(m=>m.User.FirstName, "", new { @class = "text-danger" })

    @Html.Label("MiddleName")
    @Html.TextBoxFor(m => m.User.MiddleName)

    @Html.Label("LastName")
    @Html.TextBoxFor(m => m.User.LastName)
    @Html.ValidationMessageFor(m=>m.User.LastName, "", new { @class = "text-danger" })

    @Html.Label("EmailId(UserName)")
    if (Model.User.UserId <= 0)
    {
        @Html.TextBoxFor(m => m.User.EmailId)
        @Html.ValidationMessageFor(model => model.User.EmailId, "", new { @class = "text-danger" })

        @Html.Label("Gender")
        @Html.Label("Male")
        @Html.RadioButtonFor(m => m.User.Gender, "Male")
        @Html.Label("Female")
        @Html.RadioButtonFor(m => m.User.Gender, "Female")
        @Html.Label("Others")
        @Html.RadioButtonFor(m => m.User.Gender, "Others")

        @Html.Label("Password")
        @Html.PasswordFor(m => m.User.UserPassword)
        @Html.ValidationMessageFor(m=>m.User.UserPassword, "", new { @class = "text-danger" })

        @*@Html.Label("Confirm Password")
        @Html.TextBoxFor(m=>m.ConformPassword)
        @Html.ValidationMessageFor(m => m.ConformPassword,"", new { @class = "text-danger" })*@
    }
    else
    {
        @Html.DisplayFor(m => m.User.EmailId)
    }


    @Html.Label("Contact Number")
    @Html.TextBoxFor(m => m.User.ContactNumber)
    @Html.ValidationMessageFor(m=>m.ConformPassword,"",new { @class = "text-danger" })

    @Html.Label("UserGroup")
    @Html.ListBoxFor(m => m.UserGroupID, Model.UserGroupList)

    @Html.Label("Roles")
    @Html.ListBoxFor(m => m.RoleID, Model.RolesList)

    string button = "Save";
    if (Model.User.UserId > 0)
    {
        @*@Html.CheckBoxFor(m=>m.User.IsActive)*@
        button = "Update";
        @Html.ActionLink("Delete", "DeleteUser", routeValues: new { UserId = Model.User.UserId }, htmlAttributes: new { @class = "btn btn-default" })
    }
    <input type="submit" value=@button class="btn btn-default" />
}

