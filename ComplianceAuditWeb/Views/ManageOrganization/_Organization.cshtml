@model ComplianceAuditWeb.Models.OrganizationViewModel
@{
    Layout = "~/Views/Shared/_Layout1.cshtml";
}
<script src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js"></script>
    <script language="javascript" type="text/javascript">
        function GetState(_CountryId) {
            var procemessage = "<option value='0'> Please wait...</option>";
            $("#ddlstate").html(procemessage).show();
            var url = "/ManageOrganizationController/AddGroupCompany";

            $.ajax({
                url: url,
                data: { countryid: _CountryId },
                cache: false,
                type: "POST",
                success: function (data) {
                    var markup = "<option value='0'>Select State</option>";
                    for (var x = 0; x < data.length; x++) {
                        markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                    }
                    $("#ddlstate").html(markup).show();
                },
                error: function (reponse) {
                    alert("error : " + reponse);
                }
            });

        }
    </script>





    @using (Html.BeginForm("AddGroupCompany", "ManageOrganization"))
    {
        @Html.Label("Company Name");
        @Html.TextBoxFor(m => m.organization.Company_Name);


        @Html.HiddenFor(m => m.organization.Organization_Id);


        @Html.Label("Company Description");
        @Html.TextAreaFor(m => m.organization.Description);

        @Html.Label("Industry Type");

        @Html.DropDownListFor(m => m.companydetails.Industry_Type, new SelectList
                (Enum.GetValues(typeof(ComplianceAuditWeb.Models.OrganizationViewModel.IndustryType))),
                "Select Industry Type");



        @*@Html.LabelFor(m => m.organization.Last_Updated_Date);*@
        @Html.HiddenFor(m => m.organization.Last_Updated_Date);



        @Html.Label("User ID");
        @Html.TextBoxFor(m => m.organization.User_Id);



        @Html.Label("Comoany Formal Name");
        @Html.TextBoxFor(m => m.companydetails.Formal_Name);



        @Html.LabelFor(m => m.companydetails.Website);
        @Html.TextBoxFor(m => m.companydetails.Website);

        @Html.HiddenFor(m => m.companydetails.Company_Details_ID);


        @Html.Label("Company Email Address");
        @Html.TextBoxFor(m => m.companydetails.Company_EmailID);

        @Html.Label("Contact Number1");
        @Html.TextBoxFor(m => m.companydetails.Company_ContactNumber1);

        @Html.Label("Contact Number2");
        @Html.EditorFor(m => m.companydetails.Company_ContactNumber2);

        @Html.Label("Company Start Date");
        @Html.EditorFor(m => m.companydetails.Calender_StartDate, new { htmlAttributes = new { @class = "form-control" } });

        @Html.Label("Company End Date");
        @Html.EditorFor(m => m.companydetails.Calender_EndDate, new { htmlAttributes = new { @class = "form-control" } });

        @Html.Label("Auditing Frequency");
        @Html.DropDownListFor(m => m.companydetails.Auditing_Frequency, new SelectList
                (Enum.GetValues(typeof(ComplianceAuditWeb.Models.OrganizationViewModel.AuditingFrequency))),
                "Select Auditing Freequency");

        @Html.Label("Location Name");
        @Html.TextBoxFor(m => m.branch.Branch_Name);

        @Html.HiddenFor(m => m.branch.Branch_Id);

        @Html.LabelFor(m => m.branch.Address);
        @Html.TextBoxFor(m => m.branch.Address);

        @Html.Label("Location URL");
        @Html.TextBoxFor(m => m.branch.Branch_CoordinatesURL);

        @Html.Label("Branch Coordinates1");
        @Html.TextBoxFor(m => m.branch.Branch_Coordinates1);

        @Html.Label("Branch Coordinates1");
        @Html.TextBoxFor(m => m.branch.Branch_Coordinates2);

        @Html.Label("Postal Code");
        @Html.TextBoxFor(m => m.branch.Postal_Code);

        @Html.Label("Country")
        @Html.DropDownListFor(m => m.branch.Country_Id, Model.Country,new { @onchange = "javascript:GetState(this.value);" });



        // if (Model.State != null)
        // {

        @Html.LabelFor(m => m.State);
        @Html.DropDownListFor(m => m.branch.State_Id, Model.State);
        // }


        // if (Model.City != null)
        //{

        @Html.LabelFor(m => m.City);
        @Html.DropDownListFor(m => m.branch.City_Id, Model.City);
        // }










        string button = "Save";

        if (Model.organization.Organization_Id != 0)
        {
        button = "Update";
        @Html.ActionLink("Delete", "DeleteGroupCompany", new { Orgid = Model.organization.Organization_Id });

        }


        <input type="submit" value="@button" class="btn btn-default" />
        }


