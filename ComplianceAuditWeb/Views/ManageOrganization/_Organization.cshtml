@model ComplianceAuditWeb.Models.OrganizationViewModel
@using System.Configuration;
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section scripts
    {
    <script language="javascript" type="text/javascript">
        function GetState(_CountryId) {
            var procemessage = "<option value='0'> Please wait...</option>";
            $("#branch_State_Id").html(procemessage).show();
            var url = "/Common/getstate";
            $.ajax({
                url: url,
                data: { countryid: _CountryId },
                cache: false,
                type: "POST",
                success: function (data) {
                    var markup = "<option value='0'>Select State</option>";
                    for (var x = 0; x < data.length; x++) {
                        markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                    }
                    $("#branch_State_Id").html(markup).show();
                },
                error: function (reponse) {
                    alert("error : " + reponse);
                }
            });
        }

        function GetCity(_StateId) {
            var procemessage = "<option value='0'> Please wait...</option>";
            $("#branch_City_Id").html(procemessage).show();
            var url = "/Common/getcity";
            $.ajax({
                url: url,
                data: { stateid: _StateId },
                cache: false,
                type: "POST",
                success: function (data) {
                    var markup = "<option value='0'>Select City</option>";
                    for (var x = 0; x < data.length; x++) {
                        markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                    }
                    $("#branch_City_Id").html(markup).show();
                },
                error: function (reponse) {
                    alert("error : " + reponse);
                }
            });
        }


    </script>
}
<h2 class="ML15">Manage Group Company</h2>
<ul class="breadcrumb ML15">
    <li><a href="">Group Management</a></li>
    <li> Group Company</li>
</ul>
@using (Html.BeginForm())
{
<div class="mid_content_sec">
    @Html.AntiForgeryToken()
    @Html.ValidationMessage("Error")
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="col-xs-4 subSelect ">
        <div class="input-field">
            @*@using (Html.BeginForm("AddGroupCompany", "ManageOrganization"))
                {*@
            @Html.Label("Company Name", new { @class = "floating-label" })<span style="color:red">*</span>
            @Html.TextBoxFor(m => m.organization.Company_Name, new { @class = "inputMaterial ui - autocomplete - input", size = "4", placeholder = ConfigurationManager.AppSettings["Company_Name"] })
            @Html.ValidationMessageFor(m => m.organization.Company_Name, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-xs-4 subSelect ">
        <div class="input-field">
            @Html.LabelFor(m => m.branch.Address, new { @class = "floating-label" })
            @Html.TextBoxFor(m => m.branch.Address, new { @class = "inputMaterial ui - autocomplete - input",  })
            @Html.ValidationMessageFor(m => m.branch.Address, "", new { @class = "text-danger" })

        </div>
    </div>
    <div class="col-xs-4 subSelect ">
        <div class="input-field">
            @Html.Label("Postal Code", new { @class = "floating-label" })<span style="color:red">*</span>
            @Html.TextBoxFor(m => m.branch.Postal_Code, new { @class = "inputMaterial ui - autocomplete - input", placeholder = ConfigurationManager.AppSettings["Postal_Code"] })
            @Html.ValidationMessageFor(m => m.branch.Postal_Code, "", new { @class = "text-danger" })

        </div>
    </div>


    @Html.HiddenFor(m => m.organization.Organization_Id)
    <div class="clearfix"></div>

    <div class="col-xs-12 subSelect ">
        <div class="input-field">

            @Html.Label("Company Description", new { @class = "floating-label" })
            @Html.TextAreaFor(m => m.organization.Description, new { @class = "inputMaterial ui - autocomplete - input" })

        </div>
    </div>

    @*<div class="col-xs-6 subSelect ">
            <div class="input-field">
                @Html.Label("Industry Type", new { @class = "floating-label" })<span style="color:red">*</span>

                @Html.DropDownListFor(m => m.organization.Industry_Type, new SelectList
                        (Enum.GetValues(typeof(ComplianceAuditWeb.Models.OrganizationViewModel.IndustryType))),
                        "Select Industry Type", new { @class = "inputMaterial ui - autocomplete - input" })
                @Html.ValidationMessageFor(m => m.organization.Industry_Type, "", new { @class = "text-danger" })

            </div>
        </div>
        <div class="col-xs-6 subSelect ">
            <div class="input-field">
                @Html.Label("Location URL", new { @class = "floating-label" })<span style="color:red">*</span>
                @Html.TextBoxFor(m => m.branch.Branch_CoordinatesURL, new { @class = "inputMaterial ui - autocomplete - input", placeholder = ConfigurationManager.AppSettings["Branch_CoordinatesURL"] })
            </div>
        </div>*@

    <div class="clearfix"></div>

    <div class="col-xs-4 subSelect ">
        <div class="input-field">
            @Html.Label("Country", new { @class = "floating-label" })<span style="color:red">*</span>
            @Html.DropDownListFor(m => m.branch.Country_Id, Model.Country, new { @onchange = "GetState(this.value);", @class = "inputMaterial ui - autocomplete - input", placeholder = ConfigurationManager.AppSettings["Country_ID"] })
        </div>
    </div>
    <div class="col-xs-4 subSelect ">
        <div class="input-field">




            @Html.LabelFor(m => m.State, new { @class = "floating-label" })<span style="color:red">*</span>
            @Html.DropDownListFor(m => m.branch.State_Id, Model.State, new { @onchange = "GetCity(this.value);", @class = "inputMaterial ui - autocomplete - input", placeholder = ConfigurationManager.AppSettings["State_ID"] })
        </div>
    </div>

    <div class="col-xs-4 subSelect ">
        <div class="input-field">
            @Html.LabelFor(m => m.City, new { @class = "floating-label" })
            @Html.DropDownListFor(m => m.branch.City_Id, Model.City, new { @class = "inputMaterial ui - autocomplete - input" })

        </div>
    </div>

    @Html.Partial("_UploadFiles")


</div>


    @*@Html.LabelFor(m => m.organization.Last_Updated_Date);*@
    @Html.HiddenFor(m => m.organization.Last_Updated_Date)

    @Html.HiddenFor(m => m.organization.Company_Id)




    @Html.HiddenFor(m => m.organization.User_Id)


    <div class="clearfix"></div>
    @*<div class="col-xs-4 subSelect ">
            <div class="input-field">

                @Html.Label("Comoany Formal Name", new { @class = "floating-label" })
                @Html.TextBoxFor(m => m.companydetails.Formal_Name, new { @class = "inputMaterial ui - autocomplete - input" })
                @Html.ValidationMessageFor(m => m.companydetails.Formal_Name, "", new { @class = "text-danger" })

            </div>
        </div>*@
    @*<div class="col-xs-4 subSelect ">
            <div class="input-field">


                @Html.LabelFor(m => m.companydetails.Website, new { @class = "floating-label" })<span style="color:red">*</span>
                @Html.TextBoxFor(m => m.companydetails.Website, new { @class = "inputMaterial ui - autocomplete - input" })
                @Html.ValidationMessageFor(m => m.companydetails.Website, "", new { @class = "text-danger" })

            </div>
        </div>*@

    @*@Html.HiddenFor(m => m.companydetails.Company_Details_ID)*@

    @*<div class="col-xs-4 subSelect ">
            <div class="input-field">

                @Html.Label("Company Email Address", new { @class = "floating-label" })<span style="color:red">*</span>
                @Html.TextBoxFor(m => m.companydetails.Company_EmailID, new { @class = "inputMaterial ui - autocomplete - input" })
                @Html.ValidationMessageFor(m => m.companydetails.Company_EmailID, "", new { @class = "text-danger" })

            </div>
        </div>
        <div class="clearfix"></div>
        <div class="col-xs-4 subSelect ">
            <div class="input-field">
                @Html.Label("Contact Number1", new { @class = "floating-label" })<span style="color:red">*</span>
                @Html.TextBoxFor(m => m.companydetails.Company_ContactNumber1, new { @class = "inputMaterial ui - autocomplete - input" })
                @Html.ValidationMessageFor(m => m.companydetails.Company_ContactNumber1, "", new { @class = "text-danger" })

            </div>
        </div>
        <div class="col-xs-4 subSelect ">
            <div class="input-field">
                @Html.Label("Contact Number2", new { @class = "floating-label" })
                @Html.TextBoxFor(m => m.companydetails.Company_ContactNumber2, new { @class = "inputMaterial ui - autocomplete - input" })

            </div>
        </div>
        <div class="col-xs-4 subSelect ">
            <div class="input-field">
                @Html.Label("Company Start Date", new { @class = "floating-label" })<span style="color:red">*</span>
                @Html.EditorFor(m => m.companydetails.Calender_StartDate, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>
        <div class="clearfix"></div>
        <div class="col-xs-4 subSelect ">
            <div class="input-field">
                @Html.Label("Company End Date", new { @class = "floating-label" })
                @Html.EditorFor(m => m.companydetails.Calender_EndDate, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>
        <div class="col-xs-4 subSelect ">
            <div class="input-field">
                @Html.Label("Auditing Frequency", new { @class = "floating-label" })<span style="color:red">*</span>
                @Html.DropDownListFor(m => m.companydetails.Auditing_Frequency, new SelectList
                        (Enum.GetValues(typeof(ComplianceAuditWeb.Models.OrganizationViewModel.AuditingFrequency))),
                        "Select Auditing Freequency", new { @class = "inputMaterial ui - autocomplete - input" })

                @Html.ValidationMessageFor(m => m.companydetails.Auditing_Frequency, "", new { @class = "text-danger" })

            </div>
        </div>
        <div class="col-xs-4 subSelect ">
            <div class="input-field">
                @Html.Label("Location Name", new { @class = "floating-label" })<span style="color:red">*</span>
                @Html.TextBoxFor(m => m.branch.Branch_Name, new { @class = "inputMaterial ui - autocomplete - input" })
                @Html.ValidationMessageFor(m => m.branch.Branch_Name, "", new { @class = "text-danger" })

            </div>
        </div>
        <div class="clearfix"></div>*@

    @Html.HiddenFor(m => m.branch.Branch_Id);
    @Html.HiddenFor(m => m.organization.Is_Active);
    @Html.HiddenFor(m => m.organization.Is_Delete);
    @Html.HiddenFor(m => m.organization.Is_Leaf);
    @Html.HiddenFor(m => m.organization.Level);



    @*<div class="col-xs-4 subSelect ">
            <div class="input-field">
                @Html.Label("Branch Coordinates1", new { @class = "floating-label" })
                @Html.TextBoxFor(m => m.branch.Branch_Coordinates1, new { @class = "inputMaterial ui - autocomplete - input" })
            </div>
        </div>
        <div class="clearfix"></div>
        <div class="col-xs-4 subSelect ">
            <div class="input-field">
                @Html.Label("Branch Coordinates1", new { @class = "floating-label" })
                @Html.TextBoxFor(m => m.branch.Branch_Coordinates2, new { @class = "inputMaterial ui - autocomplete - input" })
            </div>
        </div>*@







    <div class="clearfix"></div>
    <ul class="list-inline continueBtn">
        <li>

            @{string button = "save";}
            @if (Model.organization.Organization_Id != 0)
            {
                button = "Update";


            }
            @*<input type="submit" value="@button" class="btn primary-button" />*@
            <input type="submit" value="@button" class="btn primary-button"><span class="ripple" style="width: 92.6094px; height: 92.6094px; top: 49.5px; left: -19.1875px;"></span>
            <input type="reset" value="Reset" class="btn primary-button"><span class="ripple" style="width: 92.6094px; height: 92.6094px; top: 49.5px; left: -19.1875px;"></span>
            @Html.ActionLink("Cancel", "AddGroupCompany", new { Orgid = Model.organization.Organization_Id }, new { @class = "btn primary-button" });

            @*<button type="submit" class="btn primary-button" id="btnProceed" name="Button" value="@button">Create<span class="ripple" style="width: 92.6094px; height: 92.6094px; top: 49.5px; left: -19.1875px;"></span></button>*@
        </li>
    </ul>




}





