@model ComplianceAuditWeb.Models.ComplianceIndustryViewModel

@{
    /**/

    ViewBag.Title = "Map Compliance types";
}

@section scripts{




    <script language="javascript" type="text/javascript">

    function GetComplianceList() {
    var procemessage = "<option value='0'> Please wait...</option>";
    $("#tbl").html(procemessage).show();
        var countryid = $("#ComplianceType_CountryID").val();
        var industrytypeid = $("#ComplianceType_CountryID").val();
    var url = "/Common/getCompliance";

    $.ajax({
    url: url,

    data: { countryid: countryid, industrytypeid: industrytypeid },
    cache: false,
    type: "POST",
    success: function (data) {
    var markup = "";
    for (var x = 0; x < data.length; x++) {
    markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
    }
    $("#tbl").html(markup).show();
    },
    error: function (reponse) {
    alert("error : " + reponse);
    }
    });
    }

</script>


    }


    <ul class="breadcrumb ML15">
        <li><a href="/Common/dashboard?pid=6">Compliance</a></li>
        <li>Map Compliances</li>
    </ul>
    <h2 class="ML15">Map Compliances</h2>
    @{string button = "save";
        string actionname = "IndustryTypeMapwithCompliance";}

    @if (Model.ComplianceType.ComplianceTypeID > 0)
    {
        button = "Update";
        actionname = "UpdateIndustryTypeMapwithCompliance";
    }
    @*@using (Html.BeginForm(actionname, "ManageOrganization"))*@
    @using (Html.BeginForm())
    {
    <div class="mid_content_sec">
        <div class="col-xs-4 subSelect ">
            <div class="input-field">
                @Html.Label("Country", new { @class = "floating-label" })<span style="color:red">*</span>
                @Html.DropDownListFor(m => m.ComplianceType.CountryID, Model.CountryList, new { @class = "inputMaterial ui - autocomplete - input", @onchange = "GetComplianceList(this.value);" })



                @*@Html.ValidationMessageFor(model => model.branch.Country_Id, "", new { @class = "text-danger" })*@

            </div>
        </div>

        <div class="col-xs-4 subSelect ">
            <div class="input-field">
                @Html.Label("Industry Type", new { @class = "floating-label" })<span style="color:red">*</span>
                @Html.DropDownListFor(m => m.ComplianceType.IndustryTypeID, Model.IndustryTypeList, new { @class = "inputMaterial ui - autocomplete - input", @onchange = "GetComplianceList(this.value);" })



                @*@Html.ValidationMessageFor(model => model.branch.Country_Id, "", new { @class = "text-danger" })*@

            </div>
        </div>

        <div class="col-xs-4 subSelect ">
            <div class="input-field">
                @Html.Label("Compliance Type", new { @class = "floating-label" })<span style="color:red">*</span>
                @Html.TextBoxFor(m => m.ComplianceType.ComplianceTypeName, new { @class = "inputMaterial ui - autocomplete - input" })



                @*@Html.ValidationMessageFor(model => model.branch.Country_Id, "", new { @class = "text-danger" })*@

            </div>
        </div>
        <div class="clearfix"></div>
        <div class="col-xs-4 subSelect ">
            <div class="input-field">
                @Html.Label("Audit Frequency", new { @class = "floating-label" })<span style="color:red">*</span>

                @Html.DropDownListFor(m => m.ComplianceType.AuditingFrequency, new List<SelectListItem>
                       {
                              new SelectListItem{Text="1", Value="1"},
                         new SelectListItem{Text="2", Value="2"},
                          new SelectListItem{Text="4", Value="3"},
                         new SelectListItem{Text="12", Value="4"}}, "-- Select Audit Frequency --", new { @class = "inputMaterial ui - autocomplete - input" })



            </div>
        </div>
        <div class="col-xs-4 subSelect ">
            <div class="input-field">
                @Html.Label("Start Date", new { @class = "floating-label" })<span style="color:red">*</span>
                @Html.EditorFor(m => m.ComplianceType.StartDate, new { @class = "inputMaterial ui - autocomplete - input" })
            </div>
        </div>

        <div class="col-xs-4 subSelect ">
            <div class="input-field">
                @Html.Label("End Date", new { @class = "floating-label" })
                @Html.EditorFor(m => m.ComplianceType.EndDate, new { @class = "inputMaterial ui - autocomplete - input" })
            </div>
        </div>

        <div class="clearfix"></div>
        <ul class="list-inline continueBtn">
            <li>


                <input type="submit" value="Save" class="btn primary-button"><span class="ripple" style="width: 92.6094px; height: 92.6094px; top: 49.5px; left: -19.1875px;"></span>
                <input type="reset" value="Reset" class="btn primary-button"><span class="ripple" style="width: 92.6094px; height: 92.6094px; top: 49.5px; left: -19.1875px;"></span>
                <a href="@Url.Action("dashboard", "Common", new { pid = 0 })" class="btn primary-button">Cancel</a>


            </li>
        </ul>


        @Html.DisplayFor(m => m.CountryName)
        @Html.DisplayFor(m => m.IndustryName)
        @Html.DisplayFor(m => m.ComplianceType.ComplianceTypeName)


        @*<table class="table" id="tbl">
            <tr>
                <th>Country</th>

                <th>Industry Type</th>
                <th>Compliance Types</th>

            </tr>


            <tr>
                <td>
                    @Html.DisplayFor(m => m.CountryName)
                </td>
                <td>
                    @Html.DisplayFor(m => m.IndustryName)
                </td>

                <td>

                    @foreach (var row in Model.MappedComplianceList)
                    {
                        @Html.DisplayFor(m => m.ComplianceType.ComplianceTypeName)<br />
                    }
                </td>
            </tr>

        </table>*@


    </div>
    }




