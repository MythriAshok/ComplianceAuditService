@model ComplianceAuditWeb.Models.CompanyViewModel

@{
    /**/

    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section scripts
    {
    <script language="javascript" type="text/javascript">
        function GetState(_CountryId) {
            var procemessage = "<option value='0'> Please wait...</option>";
            $("#branch_State_Id").html(procemessage).show();
            var url = "/Common/getstate";
            $.ajax({
                url: url,
                data: { countryid: _CountryId },
                cache: false,
                type: "POST",
                success: function (data) {
                    var markup = "<option value='0'>Select State</option>";
                    for (var x = 0; x < data.length; x++) {
                        markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                    }
                    $("#branch_State_Id").html(markup).show();
                },
                error: function (reponse) {
                    alert("error : " + reponse);
                }
            });
        }

        function GetCity(_StateId) {
            var procemessage = "<option value='0'> Please wait...</option>";
            $("#branch_City_Id").html(procemessage).show();
            var url = "/Common/getcity";
            $.ajax({
                url: url,
                data: { stateid: _StateId },
                cache: false,
                type: "POST",
                success: function (data) {
                    var markup = "<option value='0'>Select City</option>";
                    for (var x = 0; x < data.length; x++) {
                        markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                    }
                    $("#branch_City_Id").html(markup).show();
                },
                error: function (reponse) {
                    alert("error : " + reponse);
                }
            });
        }

    </script>
}
<ul class="breadcrumb ML15">
    <li><a href="">Company Management</a></li>
    <li>Companies</li>
</ul>
<h2 class="ML15">Add  Company</h2>
@using (Html.BeginForm())
{

    @*@Html.ValidationMessage("Error")*@
<div class="mid_content_sec">
    <div class="col-xs-4 subSelect ">
        <div class="input-field">
            @Html.Label("Group Comapny", new { @class = "floating-label" })<span style="color:red">*</span>
            @Html.DropDownListFor(m => m.GroupCompanyID, Model.GroupCompaniesList, new { @class = "inputMaterial ui - autocomplete - input" })
        </div>
    </div>
    <div class="col-xs-4 subSelect ">
        <div class="input-field">

            @Html.Label("Company Name", new { @class = "floating-label" })<span style="color:red">*</span>
            @Html.TextBoxFor(m => m.organization.Company_Name, new { @class = "inputMaterial ui - autocomplete - input" })

        </div>
    </div>
    <div class="col-xs-4 subSelect ">
        <div class="input-field">

            @Html.Label("Company Formal Name", new { @class = "floating-label" })
            @Html.TextBoxFor(m => m.companydetails.Formal_Name, new { @class = "inputMaterial ui - autocomplete - input" })
        </div>
    </div>

    @Html.HiddenFor(m => m.organization.Organization_Id)
    <div class="clearfix"></div>

    <div class="col-xs-12 subSelect ">
        <div class="input-field">

            @Html.Label("Company Description", new { @class = "floating-label" })<span style="color:red">*</span>
            @Html.TextAreaFor(m => m.organization.Description, new { @class = "inputMaterial ui - autocomplete - input", @cols = "800", @style = "width:100% !important; max-width:100% !important;" })
            @*<span id="loading_data_icon"></span>*@
        </div>
    </div>
    <div class="clearfix"></div>

    <div class="col-xs-4 subSelect ">
        <div class="input-field">
            @Html.Label("Industry Type", new { @class = "floating-label" })<span style="color:red">*</span>

            @Html.DropDownListFor(m => m.organization.Industry_Type, new SelectList
                    (Enum.GetValues(typeof(ComplianceAuditWeb.Models.CompanyViewModel.IndustryType))),
                    "Select Industry Type", new { @class = "inputMaterial ui - autocomplete - input" })




        </div>
    </div>

    @*@Html.LabelFor(m => m.organization.Last_Updated_Date);*@
    @Html.HiddenFor(m => m.organization.Last_Updated_Date)
    @Html.HiddenFor(m => m.organization.Company_Id)




    @Html.HiddenFor(m => m.organization.User_Id)

    @Html.HiddenFor(m => m.organization.Parent_Company_Id)

    @Html.HiddenFor(m => m.organization.Level)



    <div class="col-xs-4 subSelect ">
        <div class="input-field">


            @Html.LabelFor(m => m.companydetails.Website, new { @class = "floating-label" })<span style="color:red">*</span>
            @Html.TextBoxFor(m => m.companydetails.Website, new { @class = "inputMaterial ui - autocomplete - input" })
        </div>
    </div>

    @Html.HiddenFor(m => m.companydetails.Company_Details_ID)
    @Html.HiddenFor(m=>m.organization.Is_Active)
    <div class="col-xs-4 subSelect ">
        <div class="input-field">

            @Html.Label("Company Email Address", new { @class = "floating-label" })<span style="color:red">*</span>
            @Html.TextBoxFor(m => m.companydetails.Company_EmailID, new { @class = "inputMaterial ui - autocomplete - input" })
        </div>
    </div>
    <div class="clearfix"></div>

    <div class="col-xs-4 subSelect ">
        <div class="input-field">
            @Html.Label("Contact Number1", new { @class = "floating-label" })<span style="color:red">*</span>
            @Html.TextBoxFor(m => m.companydetails.Company_ContactNumber1, new { @class = "inputMaterial ui - autocomplete - input" })
        </div>
    </div>
    <div class="col-xs-4 subSelect ">

        <div class="input-field">
            @Html.Label("Contact Number2", new { @class = "floating-label" })<span style="color:red">&nbsp;</span>
            @Html.TextBoxFor(m => m.companydetails.Company_ContactNumber2, new { @class = "inputMaterial ui - autocomplete - input" })
        </div>

    </div>

    <div class="col-xs-4 subSelect ">
        <div class="input-field">
            @Html.Label("Location Name", new { @class = "floating-label" })<span style="color:red">*</span>
            @Html.TextBoxFor(m => m.branch.Branch_Name, new { @class = "inputMaterial ui - autocomplete - input" })
        </div>
    </div>

    <div class="clearfix"></div>


    <div class="col-xs-4 subSelect ">
        <div class="input-field">
            @Html.Label("Auditing Frequency", new { @class = "floating-label" })<span style="color:red">*</span>
            @Html.DropDownListFor(m => m.companydetails.Auditing_Frequency, new SelectList
                    (Enum.GetValues(typeof(ComplianceAuditWeb.Models.CompanyViewModel.Auditingfrequency))),
                    "Select Auditing Freequency", new { @class = "inputMaterial ui - autocomplete - input" })
        </div>
    </div>



    @Html.HiddenFor(m => m.branch.Branch_Id)
    @Html.HiddenFor(m => m.companydetails.Company_Details_ID)

    <div class="col-xs-4 subSelect ">
        <div class="input-field">
            @Html.LabelFor(m => m.branch.Address, new { @class = "floating-label" })<span style="color:red">*</span>
            @Html.TextBoxFor(m => m.branch.Address, new { @class = "inputMaterial ui - autocomplete - input" })
        </div>
    </div>
    <div class="col-xs-4 subSelect ">
        <div class="input-field">
            @Html.Label("Location URL", new { @class = "floating-label" })<span style="color:red">*</span>
            @Html.TextBoxFor(m => m.branch.Branch_CoordinatesURL, new { @class = "inputMaterial ui - autocomplete - input" })
        </div>
    </div>
    <div class="clearfix"></div>

    <div class="col-xs-4 subSelect ">
        <div class="input-field">
            @Html.Label("Branch Coordinates1", new { @class = "floating-label" })<span style="color:red">*</span>
            @Html.TextBoxFor(m => m.branch.Branch_Coordinates1, new { @class = "inputMaterial ui - autocomplete - input" })
        </div>
    </div>

    <div class="col-xs-4 subSelect ">
        <div class="input-field">
            @Html.Label("Branch Coordinates2", new { @class = "floating-label" })<span style="color:red">*</span>
            @Html.TextBoxFor(m => m.branch.Branch_Coordinates2, new { @class = "inputMaterial ui - autocomplete - input" })
        </div>
    </div>
    <div class="col-xs-4 subSelect ">
        <div class="input-field">
            @Html.Label("Postal Code", new { @class = "floating-label" })<span style="color:red">*</span>
            @Html.TextBoxFor(m => m.branch.Postal_Code, new { @class = "inputMaterial ui - autocomplete - input" })
        </div>
    </div>
    <div class="clearfix"></div>


    <div class="col-xs-4 subSelect ">
        <div class="input-field">
            @Html.Label("Country", new { @class = "floating-label" })<span style="color:red">*</span>
            @Html.DropDownListFor(m => m.branch.Country_Id, Model.Country, new { @onchange = "GetState(this.value);", @class = "inputMaterial ui - autocomplete - input" })
        </div>
    </div>



    <div class="col-xs-4 subSelect ">
        <div class="input-field">


            @Html.LabelFor(m => m.State, new { @class = "floating-label" })<span style="color:red">*</span>
            @Html.DropDownListFor(m => m.branch.State_Id, Model.State, new { @onchange = "GetCity(this.value);", @class = "inputMaterial ui - autocomplete - input" })

        </div>
    </div>




    <div class="col-xs-4 subSelect ">
        <div class="input-field">

            @Html.LabelFor(m => m.City, new { @class = "floating-label" })<span style="color:red">*</span>
            @Html.DropDownListFor(m => m.branch.City_Id, Model.City, new { @class = "inputMaterial ui - autocomplete - input" })
        </div>
    </div>





    <div class="clearfix"></div>

    <div class="col-xs-4 subSelect ">
        <div class="input-field">
            @Html.Label("Company Start Date", new { @class = "floating-label" })<span style="color:red">*</span>
            @Html.EditorFor(m => m.companydetails.Calender_StartDate, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>

    <div class="col-xs-4 subSelect ">
        <div class="input-field">
            @Html.Label("Company End Date", new { @class = "floating-label" })<span style="color:red">*</span>
            @Html.EditorFor(m => m.companydetails.Calender_EndDate, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>






    <ul class="list-inline continueBtn">
        <li>

            @{string button = "save";}
            @if (Model.organization.Organization_Id != 0)
            {
                button = "Update";

            }
            @*<input type="submit" value="@button" class="btn btn-default" />*@

            <input type="submit" value="@button" class="btn primary-button"><span class="ripple" style="width: 92.6094px; height: 92.6094px; top: 49.5px; left: -19.1875px;"></span>
            <input type="reset" value="Reset" class="btn primary-button"><span class="ripple" style="width: 92.6094px; height: 92.6094px; top: 49.5px; left: -19.1875px;"></span>
            @Html.ActionLink("Cancel", "AddCompany", new { Orgid = Model.organization.Organization_Id }, new { @class = "btn primary-button" })


        </li>
    </ul>

</div>


}


    }




