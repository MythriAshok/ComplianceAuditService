@model ComplianceAuditWeb.Models.CompanyViewModel
@using System.Configuration;
@{
    ViewBag.Title = "Compliance Auditing";
}
@section scripts
    {
    <script language="javascript" type="text/javascript">
        function GetState(_CountryId) {
            var procemessage = "<option value='0'> Please wait...</option>";
            $("#branch_State_Id").html(procemessage).show();
            var url = "/Common/getstate";
            $.ajax({
                url: url,
                data: { countryid: _CountryId },
                cache: false,
                type: "POST",
                success: function (data) {
                    var markup = "<option value='0'>-- Select State --</option>";
                    for (var x = 0; x < data.length; x++) {
                        markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                    }
                    $("#branch_State_Id").html(markup).show();
                },
                error: function (reponse) {
                    alert("error : " + reponse);
                }
            });
        }

        function GetCity(_StateId) {
            var procemessage = "<option value='0'> Please wait...</option>";
            $("#branch_City_Id").html(procemessage).show();
            var url = "/Common/getcity";
            $.ajax({
                url: url,
                data: { stateid: _StateId },
                cache: false,
                type: "POST",
                success: function (data) {
                    var markup = "<option value='0'>-- Select City --</option>";
                    for (var x = 0; x < data.length; x++) {
                        markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                    }
                    $("#branch_City_Id").html(markup).show();
                },
                error: function (reponse) {
                    alert("error : " + reponse);
                }
            });
        }

    </script>
    <script type="text/javascript">
        function ShowPreview(input) {
            if (input.files && input.files[0]) {
                var ImageDir = new FileReader();
                ImageDir.onload = function (e) {
                    $('#impPrev').attr('src', e.target.result);
                }
                ImageDir.readAsDataURL(input.files[0]);
            }
        }
    </script>
}
@if (Model.organization.Organization_Id == 0)
{
    <ul class="breadcrumb ML15">
        <li><a href="/Common/dashboard?pid=9">Company Management</a></li>
        <li>Add Company</li>
    </ul>
    <h2 class="ML15">Add  Company</h2>

}
@{string button = "save";
    string actionname = "AddCompany";}
@if (Model.organization.Organization_Id != 0)
{
    button = "Update";
    actionname = "UpdateCompany";
    <ul class="breadcrumb ML15">
        <li><a href="/Common/dashboard?pid=9">Company Management</a></li>
        <li>Update Company</li>
    </ul>
    <h2 class="ML15">Update  Company</h2>
}
@using (Html.BeginForm(actionname, "ManageOrganization", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{

    @*@Html.ValidationMessage("Error")*@
    <div class="mid_content_sec">
        <div class="col-xs-4 subSelect ">
            <div class="input-field">

                @if ((TempData["GroupCompanyID"]) != null)
                {
                    Model.GroupCompanyName = TempData["GroupCompanyName"].ToString();
                    @Html.Label("Group Company")<span style="color:red">*</span>


                    @Html.TextBoxFor(m => m.GroupCompanyName, new { @class = "inputMaterial ui - autocomplete - input", @readonly = "readonly" })
                    @Html.HiddenFor(m => m.GroupCompanyID)
                }

                else
                {
                    @Html.Label("Group Comapny", new { @class = "floating-label" })<span style="color:red">*</span>
                    @Html.DropDownListFor(m => m.GroupCompanyID, Model.GroupCompaniesList, new { @class = "inputMaterial ui - autocomplete - input" })

                }
            </div>
        </div>

        <div class="col-xs-4 subSelect ">
            <div class="input-field">

                @Html.Label("Company Name", new { @class = "floating-label" })<span style="color:red">*</span>
                @Html.TextBoxFor(m => m.organization.Company_Name, new { @class = "inputMaterial ui - autocomplete - input", placeholder = ConfigurationManager.AppSettings["Company_Name"] })

            </div>
        </div>
        <div class="col-xs-4 subSelect ">
            <div class="input-field">

                @Html.Label("Company Formal Name", new { @class = "floating-label" })
                @Html.TextBoxFor(m => m.companydetails.Formal_Name, new { @class = "inputMaterial ui - autocomplete - input" })
            </div>
        </div>

        @Html.HiddenFor(m => m.organization.Organization_Id)
        <div class="clearfix"></div>

        <div class="col-xs-12 subSelect ">
            <div class="input-field">

                @Html.Label("Company Description", new { @class = "floating-label" })
                @Html.TextAreaFor(m => m.organization.Description, new { @class = "inputMaterial ui - autocomplete - input", @cols = "800", @style = "width:100% !important; max-width:100% !important;" })
                @*<span id="loading_data_icon"></span>*@
            </div>
        </div>
        <div class="clearfix"></div>

        <div class="col-xs-4 subSelect ">
            <div class="input-field">
                @Html.Label("Industry Type", new { @class = "floating-label" })<span style="color:red">*</span>

                @*@Html.DropDownListFor(m => m.organization.Industry_Type, new SelectList
                    (Enum.GetValues(typeof(ComplianceAuditWeb.Models.CompanyViewModel.IndustryType))),
                    "Select Industry Type", new { @class = "inputMaterial ui - autocomplete - input", placeholder = ConfigurationManager.AppSettings["Industry_Type"] })*@

                @Html.DropDownListFor(m=>m.organization.Industry_Type, new List<SelectListItem>
           { new SelectListItem{Text="Marketing", Value="1"},
             new SelectListItem{Text="Manufacturing", Value="2"},
             new SelectListItem{Text="IT", Value="3"}},"--Select Industry Type--" ,new { @class = "inputMaterial ui - autocomplete - input", placeholder = ConfigurationManager.AppSettings["Industry_Type"] })


            </div>
        </div>

        @*@Html.LabelFor(m => m.organization.Last_Updated_Date);*@
        @Html.HiddenFor(m => m.organization.Last_Updated_Date)
        @Html.HiddenFor(m => m.organization.Company_Id)
        @Html.HiddenFor(m => m.organization.Is_Vendor)
        @Html.HiddenFor(m => m.organization.User_Id)
        @Html.HiddenFor(m => m.organization.Parent_Company_Id)
        @Html.HiddenFor(m => m.organization.Level)
        @Html.HiddenFor(m => m.branch.Org_Hier_ID)



        <div class="col-xs-4 subSelect ">
            <div class="input-field">


                @Html.LabelFor(m => m.companydetails.Website, new { @class = "floating-label" })<span style="color:red">*</span>
                @Html.TextBoxFor(m => m.companydetails.Website, new { @class = "inputMaterial ui - autocomplete - input", placeholder = ConfigurationManager.AppSettings["Website"] })
            </div>
        </div>

        @Html.HiddenFor(m => m.companydetails.Company_Details_ID)
        @Html.HiddenFor(m => m.organization.Is_Active)
        <div class="col-xs-4 subSelect ">
            <div class="input-field">

                @Html.Label("Company Email Address", new { @class = "floating-label" })<span style="color:red">*</span>
                @Html.TextBoxFor(m => m.companydetails.Company_EmailID, new { @class = "inputMaterial ui - autocomplete - input", placeholder = ConfigurationManager.AppSettings["Company_Email_ID"] })
            </div>
        </div>
        <div class="clearfix"></div>


        @*@Html.Label("Type of Audit", new { @class = "floating-label" })<span style="color:red">*</span>
            @Html.ListBoxFor(m => m.ComplianceAuditTypeID, Model.ComplianceAuditTypeList, new { @class = "inputMaterial ui - autocomplete - input" })*@

        @*@Html.Label("Audit Type", new { @class = "floating-label" })<span style="color:red">*</span>*@

        @*@Html.ListBoxFor(m => m.TpeofAuditList, new MultiSelectList
            (Enum.GetValues(typeof(ComplianceAuditWeb.Models.CompanyViewModel.AuditType))),
            "Chose Audit Type", new { @class = "inputMaterial ui - autocomplete - input"})*@

        @*@Html.ListBoxFor(m => m.TpeofAuditList, new MultiSelectList(Model.ComplianceAuditTypeList),
            Enum.GetValues(typeof(ComplianceAuditWeb.Models.CompanyViewModel.AuditType))),
             "*@










        <div class="col-xs-4 subSelect ">
            <div class="input-field">
                @Html.Label("Contact Number1", new { @class = "floating-label" })<span style="color:red">*</span>
                @Html.TextBoxFor(m => m.companydetails.Company_ContactNumber1, new { @class = "inputMaterial ui - autocomplete - input", placeholder = ConfigurationManager.AppSettings[" Contact Number 1"] })
            </div>
        </div>
        <div class="col-xs-4 subSelect ">

            <div class="input-field">
                @Html.Label("Contact Number2", new { @class = "floating-label" })
                @Html.TextBoxFor(m => m.companydetails.Company_ContactNumber2, new { @class = "inputMaterial ui - autocomplete - input" })
            </div>

        </div>

        <div class="col-xs-4 subSelect ">
            <div class="input-field">
                @Html.Label("Location Name", new { @class = "floating-label" })
                @Html.TextBoxFor(m => m.branch.Branch_Name, new { @class = "inputMaterial ui - autocomplete - input" })
            </div>
        </div>

        <div class="clearfix"></div>


        <div class="col-xs-4 subSelect ">
            <div class="input-field">
                @Html.Label("Auditing Frequency", new { @class = "floating-label" })<span style="color:red">*</span>
                @*@Html.DropDownListFor(m => m.companydetails.Auditing_Frequency, new SelectList
                        (Enum.GetValues(typeof(ComplianceAuditWeb.Models.CompanyViewModel.Auditingfrequency))),
                        "Select Auditing Freequency", new { @class = "inputMaterial ui - autocomplete - input" })*@

                @Html.DropDownListFor(m=>m.companydetails.Auditing_Frequency, new List<SelectListItem>
        { new SelectListItem{Text="Quarterly", Value="1"},
          new SelectListItem{Text="Half Yearly", Value="2"},
          new SelectListItem{Text="Anually", Value="3"}},"--Select Auditing Frequency--" ,new { @class = "inputMaterial ui - autocomplete - input", placeholder = ConfigurationManager.AppSettings["Industry_Type"] })




            </div>
        </div>



        @Html.HiddenFor(m => m.branch.Branch_Id)
        @Html.HiddenFor(m => m.companydetails.Company_Details_ID)

        <div class="col-xs-4 subSelect ">
            <div class="input-field">
                @Html.LabelFor(m => m.branch.Address, new { @class = "floating-label" })
                @Html.TextBoxFor(m => m.branch.Address, new { @class = "inputMaterial ui - autocomplete - input" })
            </div>
        </div>

        <div class="col-xs-4 subSelect ">
            <div class="input-field">
                @Html.Label("Location URL", new { @class = "floating-label" })
                @Html.TextBoxFor(m => m.branch.Branch_CoordinatesURL, new { @class = "inputMaterial ui - autocomplete - input" })
            </div>
        </div>
        <div class="clearfix"></div>

        <div class="col-xs-4 subSelect ">
            <div class="input-field">
                @Html.Label("Branch Coordinates1", new { @class = "floating-label" })
                @Html.TextBoxFor(m => m.branch.Branch_Coordinates1, new { @class = "inputMaterial ui - autocomplete - input" })
            </div>
        </div>

        <div class="col-xs-4 subSelect ">
            <div class="input-field">
                @Html.Label("Branch Coordinates2", new { @class = "floating-label" })
                @Html.TextBoxFor(m => m.branch.Branch_Coordinates2, new { @class = "inputMaterial ui - autocomplete - input" })
            </div>
        </div>

        <div class="col-xs-4 subSelect ">
            <div class="input-field">
                @Html.Label("Postal Code", new { @class = "floating-label" })<span style="color:red">*</span>
                @Html.TextBoxFor(m => m.branch.Postal_Code, new { @class = "inputMaterial ui - autocomplete - input", placeholder = ConfigurationManager.AppSettings["Postal_Code"] })
            </div>
        </div>
        <div class="clearfix"></div>


        <div class="col-xs-4 subSelect ">
            <div class="input-field">
                @Html.Label("Country", new { @class = "floating-label" })<span style="color:red">*</span>
                @Html.DropDownListFor(m => m.branch.Country_Id, Model.Country, new { @onchange = "GetState(this.value);", @class = "inputMaterial ui - autocomplete - input", placeholder = ConfigurationManager.AppSettings["Country_ID"] })
            </div>
        </div>



        <div class="col-xs-4 subSelect ">
            <div class="input-field">


                @Html.LabelFor(m => m.State, new { @class = "floating-label" })<span style="color:red">*</span>
                @Html.DropDownListFor(m => m.branch.State_Id, Model.State, new { @onchange = "GetCity(this.value);", @class = "inputMaterial ui - autocomplete - input" })

            </div>
        </div>




        <div class="col-xs-4 subSelect ">
            <div class="input-field">

                @Html.LabelFor(m => m.City, new { @class = "floating-label" })
                @Html.DropDownListFor(m => m.branch.City_Id, Model.City, new { @class = "inputMaterial ui - autocomplete - input" })
            </div>
        </div>



        <div class="clearfix"></div>



        <div class="col-xs-4 subSelect ">
            <div class="input-field">
                @Html.Label("Financial Year Start Date", new { @class = "floating-label" })
                @Html.EditorFor(m => m.companydetails.Calender_StartDate, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="col-xs-4 subSelect ">
            <div class="input-field">
                @Html.Label("Financial Year End Date", new { @class = "floating-label" })
                @Html.EditorFor(m => m.companydetails.Calender_EndDate, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="col-xs-4 subSelect ">
            <div class="input-field">
                <label for="file">Upload Logo:</label>
                <input type="file" name="file" id="file" onchange="ShowPreview(this)" />
                @Html.ValidationMessageFor(m => m.organization.logo, "", new { @class = "text-danger" })

                <img id="impPrev" src="/UploadedFiles/@Model.organization.logo" alt="" style="height:80px;width:80px" />
            </div>
        </div>





        <ul class="list-inline continueBtn">
            <li>


                @*<input type="submit" value="@button" class="btn btn-default" />*@

                <input type="submit" value="@button" class="btn primary-button"><span class="ripple" style="width: 92.6094px; height: 92.6094px; top: 49.5px; left: -19.1875px;"></span>
                <input type="reset" value="Reset" class="btn primary-button"><span class="ripple" style="width: 92.6094px; height: 92.6094px; top: 49.5px; left: -19.1875px;"></span>
                @*@Html.ActionLink("Cancel", "AddCompany", new { Orgid = Model.organization.Organization_Id }, new { @class = "btn primary-button" })*@
                <a href="@Url.Action("dashboard","Common",new { pid=9})" class="btn primary-button">Cancel</a>



            </li>
        </ul>

    </div>


}


}




