@model ComplianceAuditWeb.Models.CompanyViewModel
@using System.Configuration;
@{
    /**/

    ViewBag.Title = "Add Vendor";
}
@section scripts{
    <script language="javascript" type="text/javascript">
        function GetCompany(_Groupcompid) {
            var procemessage = "<option value='0'> Please wait...</option>";
            $("#CompanyID").html(procemessage).show();
            var url = "/Common/getcompany";

            $.ajax({
                url: url,
                data: { groupcompid: _Groupcompid },
                cache: false,
                type: "POST",
                success: function (data) {
                    var markup = "<option value='0'>Select Company</option>";
                    for (var x = 0; x < data.length; x++) {
                        markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                    }
                    $("#CompanyID").html(markup).show();
                },
                error: function (reponse) {
                    alert("error : " + reponse);
                }
            });
        }
    </script>
}
<ul class="breadcrumb ML15">
    <li><a href="">Vendor Management</a></li>
    <li> Vendor</li>
</ul>
<h2 class="ML15">Add Vendor</h2>

@using (Html.BeginForm("AddVendor", "ManageOrganization", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
<div class="mid_content_sec">


    <div class="col-xs-4 subSelect ">
        <div class="input-field">
            @if ((Session["CompanyName"]) != null)

            {

                @Html.Label("Company")


                Model.GroupCompanyID = Convert.ToInt32(Session["ParentCompanyID"]);
                Model.CompanyID = Convert.ToInt32(Session["CompanyID"]);
                Model.ChildCompanyName = Session["CompanyName"].ToString();
                @Html.TextBoxFor(m => m.ChildCompanyName, new { @class = "inputMaterial ui - autocomplete - input", @readonly = "readonly" })
                @Html.HiddenFor(m => m.GroupCompanyID)
                @Html.HiddenFor(m => m.CompanyID)

            }
            else
            {
                @*<div class="col-xs-4 subSelect ">
                                <div class="input-field">
                                    @Html.Label("GroupCompany", new { @class = "floating-label" })
                                @Html.DropDownListFor(m => m.GroupCompanyID, Model.GroupCompaniesList, new { @class = "inputMaterial ui - autocomplete - input", @onchange = "GetCompany(this.value)" })
                        </div>
                    </div>*@







                @Html.Label("Company", new { @class = "floating-label" })<span style="color:red">*</span>
                @Html.DropDownListFor(m => m.CompanyID, Model.CompaniesList, new { @class = "inputMaterial ui - autocomplete - input" })

            }
        </div>
    </div>






    <div class="col-xs-4 subSelect ">
        <div class="input-field">
            @Html.Label("Vendor Name", new { @class = "floating-label" })<span style="color:red">*</span>
            @Html.TextBoxFor(m => m.organization.Company_Name, new { @class = "inputMaterial ui - autocomplete - input", placeholder = ConfigurationManager.AppSettings["Company_Name"] })
            <span id="loading_data_icon"></span>
        </div>
    </div>
    <div class="col-xs-4 subSelect ">
        <div class="input-field">
            @Html.Label("Vendor Description", new { @class = "floating-label" })<span style="color:red">*</span>
            @Html.TextAreaFor(m => m.organization.Description, new { @class = "inputMaterial ui - autocomplete - input", placeholder = ConfigurationManager.AppSettings["Company_Name"] })
            <span id="loading_data_icon"></span>
        </div>
    </div>
    <div class="clearfix"></div>

    <div class="col-xs-4 subSelect ">
        <div class="input-field">

            @Html.Label("Contact Number1", new { @class = "floating-label" })
            @Html.TextBoxFor(m => m.companydetails.Company_ContactNumber1, new { @class = "inputMaterial ui - autocomplete - input" })
            <span id="loading_data_icon"></span>
        </div>
    </div>


    <div class="col-xs-4 subSelect ">
        <div class="input-field">
            @Html.Label("Contact Number2", new { @class = "floating-label" })
            @Html.TextBoxFor(m => m.companydetails.Company_ContactNumber2, new { @class = "inputMaterial ui - autocomplete - input" })
            <span id="loading_data_icon"></span>
        </div>
    </div>

    <div class="col-xs-4 subSelect ">
        <div class="input-field">
            @Html.Label("Website", new { @class = "floating-label" })
            @Html.TextBoxFor(m => m.companydetails.Website, new { @class = "inputMaterial ui - autocomplete - input" })
            <span id="loading_data_icon"></span>
        </div>
    </div>
    <div class="clearfix"></div>

    <div class="col-xs-4 subSelect ">
        <div class="input-field">
            @Html.Label("Vendor Email ID", new { @class = "floating-label" })
            @Html.TextBoxFor(m => m.companydetails.Company_EmailID, new { @class = "inputMaterial ui - autocomplete - input" })
            <span id="loading_data_icon"></span>
        </div>
    </div>


    <div class="col-xs-4 subSelect ">
        <div class="input-field">
            @Html.Label("Vendor Type", new { @class = "floating-label" })<span style="color:red">*</span>
            @Html.DropDownListFor(m => m.organization.Industry_Type, new SelectList
(Enum.GetValues(typeof(ComplianceAuditWeb.Models.CompanyViewModel.IndustryType))),
"Select Vendor Type", new { @class = "inputMaterial ui - autocomplete - input", placeholder = ConfigurationManager.AppSettings["Industry_Type"] })

        </div>
    </div>



    <div class="col-xs-4 subSelect ">
        <div class="input-field">
            @Html.Label("Auditing Frequency")
            @Html.DropDownListFor(m => m.companydetails.Auditing_Frequency, new SelectList
                (Enum.GetValues(typeof(ComplianceAuditWeb.Models.CompanyViewModel.Auditingfrequency))),
                "Select Vendor Auditing Freequency")

        </div>
    </div>
    <div class=" clearfix"></div>

    <div class="col-xs-4 subSelect ">
        <div class="input-field">

            @Html.Label("Start Date")
            @Html.EditorFor(m => m.companydetails.Calender_StartDate)
        </div>
    </div>

    <div class="col-xs-4 subSelect ">
        <div class="input-field">

            @Html.Label("End Date")
            @Html.EditorFor(m => m.companydetails.Calender_EndDate)
        </div>
    </div>

    @Html.HiddenFor(m => m.branch.Branch_Id)
    @Html.HiddenFor(m => m.branch.City_Id)
    @Html.HiddenFor(m => m.branch.Country_Id)
    @Html.HiddenFor(m => m.branch.State_Id)
    @Html.HiddenFor(m => m.branch.City_Id)
    @Html.HiddenFor(m => m.organization.User_Id)
    @Html.HiddenFor(m => m.organization.Parent_Company_Id)
    @Html.HiddenFor(m => m.organization.Organization_Id)
    @Html.HiddenFor(m => m.organization.Level)
    @Html.HiddenFor(m => m.organization.Last_Updated_Date)
    @Html.HiddenFor(m => m.organization.Is_Vendor)
    @Html.HiddenFor(m => m.organization.Is_Leaf)
    @Html.HiddenFor(m => m.organization.Is_Delete)
    @Html.HiddenFor(m => m.organization.Is_Active)
    @Html.HiddenFor(m => m.organization.Description)
    @Html.HiddenFor(m => m.organization.Company_Id)
    @Html.HiddenFor(m => m.companydetails.Company_Details_ID)

    <div class="col-xs-4 subSelect ">
        <div class="input-field">
            <label for="file">Upload File:</label>
            <input type="file" name="file" id="file" />
            @Html.ValidationMessageFor(m => m.organization.logo, "", new { @class = "text-danger" })

        </div>
    </div>

    <ul class="list-inline continueBtn">
        <li>

            @{string button = "save";}
            @if (Model.organization.Organization_Id != 0)
            {
                button = "Update";
            }
            <input type="submit" value="@button" class="btn primary-button"><span class="ripple" style="width: 92.6094px; height: 92.6094px; top: 49.5px; left: -19.1875px;"></span>

            <input type="reset" value="Reset" class="btn primary-button"><span class="ripple" style="width: 92.6094px; height: 92.6094px; top: 49.5px; left: -19.1875px;"></span>
            @Html.ActionLink("Cancel", "AddBranch", new { VendorID = Model.organization.Organization_Id }, new { @class = "btn primary-button" })

            @*<input type="submit" value="Reset" class="btn primary-button"><span class="ripple" style="width: 92.6094px; height: 92.6094px; top: 49.5px; left: -19.1875px;"></span>

                <input type="submit" value="Delete" class="btn primary-button"  ><span class="ripple" style="width: 92.6094px; height: 92.6094px; top: 49.5px; left: -19.1875px;"></span>*@


            @*<button type="submit" class="btn primary-button" id="btnProceed" name="Button" value="@button">Create<span class="ripple" style="width: 92.6094px; height: 92.6094px; top: 49.5px; left: -19.1875px;"></span></button>*@
        </li>
    </ul>


</div>
        }




